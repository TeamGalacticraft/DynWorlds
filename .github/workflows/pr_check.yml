name: Pull Request Check

on:
  pull_request:
    types: [ synchronize, opened ]
    branches: [ 'minecraft/*' ]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
            common/.gradle
            fabric/.gradle
            neoforge/.gradle
            neoforge/build/jars
            neoforge/build/neoForge
            neoforge/build/neoForm
            neoforge/build/tmp/neoFormRecompile
          key: ${{ runner.os }}-gradle-PR${{github.event.number}}-${{ hashFiles('gradle/gradle-wrapper.properties', 'settings.gradle.kts', '**/build.gradle.kts', '**/gradle.properties') }}-${{github.ref_name}}
          restore-keys: |
            ${{ runner.os }}-gradle-PR${{github.event.number}}-${{ hashFiles('gradle/gradle-wrapper.properties', 'settings.gradle.kts', '**/build.gradle.kts', '**/gradle.properties') }}
            ${{ runner.os }}-gradle-PR${{github.event.number}}-
            ${{ runner.os }}-gradle-${{ hashFiles('gradle/gradle-wrapper.properties', 'settings.gradle.kts', '**/build.gradle.kts', '**/gradle.properties') }}
            ${{ runner.os }}-gradle-

      - name: Initialize build environment
        run: ./gradlew

      - name: Check license headers
        run: ./gradlew checkLicenses

      - name: Build
        if: ${{ !cancelled() }}
        id: build
        run: ./gradlew assemble -x checkLicenses

      - name: Test
        if: ${{ steps.build.outcome == 'success' && !cancelled() }}
        run: ./gradlew :fabric:runGametest :neoforge:runGameTestServer
